---
- include_tasks: variables.yml

- name: Assert kernel version
  ansible.builtin.assert:
    that:
      - pve_i915_sriov_dkms_assert_kernel_ver is version(pve_i915_sriov_dkms_assert_min_kernel_ver, '>=', version_type='strict')
      - pve_i915_sriov_dkms_assert_kernel_ver is version(pve_i915_sriov_dkms_assert_max_kernel_ver, '<=', version_type='strict')
    success_msg: "Kernel version {{ pve_i915_sriov_dkms_assert_kernel_ver }} ({{ pve_i915_sriov_dkms_kern_ver }}) is between {{ pve_i915_sriov_dkms_assert_min_kernel_ver }} and {{ pve_i915_sriov_dkms_assert_max_kernel_ver }}."
    fail_msg: "Kernel version {{ pve_i915_sriov_dkms_assert_kernel_ver }} ({{ pve_i915_sriov_dkms_kern_ver }}) is not between {{ pve_i915_sriov_dkms_assert_min_kernel_ver }} and {{ pve_i915_sriov_dkms_assert_max_kernel_ver }}."

- name: Get i915 device path (1/3)
  ansible.builtin.find:
    paths: /sys/bus/pci/drivers/i915/
    patterns: '.*\.0$'
    file_type: link
    use_regex: true
  register: __i915_device_link_path
  when: pve_i915_sriov_dkms_sysfs_device_path is not defined

- name: Get i915 device path (2/3)
  ansible.builtin.stat:
    path: "{{ __i915_device_link_path.files[0].path }}"
  register: __i915_device_link_stat
  when: pve_i915_sriov_dkms_sysfs_device_path is not defined

- name: Get i915 device path (3/3)
  ansible.builtin.set_fact:
    pve_i915_sriov_dkms_sysfs_device_path: "{{ __i915_device_link_stat.stat.lnk_source | regex_replace('^/sys/', '') }}"
  when: pve_i915_sriov_dkms_sysfs_device_path is not defined

- name: Install kernel headers
  ansible.builtin.apt:
    name: "{{ pve_i915_sriov_dkms_header_pkg }}"
    state: present
  become: true

- name: Install require packages
  ansible.builtin.apt:
    name: "{{ pve_i915_sriov_dkms_pkgs | list }}"
    state: present
  become: true

- name: ensure the repository has been added
  ansible.builtin.apt_repository:
    repo: "{{ pve_i915_sriov_dkms_repo_non_free_firmware }}"
    state: present
    filename: "{{ pve_i915_sriov_dkms_repo_filename }}"
  become: true

- name: ensure the repository has been added
  ansible.builtin.apt_repository:
    repo: "{{ pve_i915_sriov_dkms_repo_non_free_driver }}"
    state: present
    filename: "{{ pve_i915_sriov_dkms_repo_filename }}"
  become: true

- name: Install require packages
  ansible.builtin.apt:
    name: "{{ pve_i915_sriov_dkms_non_free_pkgs | list }}"
    state: present
  become: true

#- name: Install require packages
#  ansible.builtin.get_url:
#    url: "{{ pve_i915_sriov_dkms_adlp_dmc_url }}"
#    dest: "{{ pve_i915_sriov_dkms_adlp_dmc_dest }}"
#    force: true
#  ignore_errors: true
#  become: true
- name: download adlp_dmc.bin
  ansible.builtin.command:
    argv:
      - wget
      - -r
      - -nd
      - -e
      - robots=no
      - -A
      - "*.bin"
      - --accept-regex
      - "/plain/"
      - "{{ pve_i915_sriov_dkms_adlp_dmc_url }}"
      - -O
      - "{{ pve_i915_sriov_dkms_adlp_dmc_dest }}"
    creates: "{{ omit if pve_i915_sriov_dkms_force_download_adlp_dmc else pve_i915_sriov_dkms_adlp_dmc_dest }}"
  become: true

- name: ensure the git clone directory
  ansible.builtin.file:
    path: "{{ pve_i915_sriov_dkms_dest_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true

- name: git clone i915-sriov-dkms
  ansible.builtin.git:
    repo: "{{ pve_i915_sriov_dkms_git_repo }}"
    dest: "{{ pve_i915_sriov_dkms_dest_dir }}"
    version: "{{ pve_i915_sriov_dkms_git_version }}"
    force: "{{ pve_i915_sriov_dkms_force_git_clone }}"
  become: true

- name: configure i915-sriov-dkms
  ansible.builtin.lineinfile:
    path: "{{ pve_i915_sriov_dkms_conf_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: "^PACKAGE_NAME="
      line: 'PACKAGE_NAME="i915-sriov-dkms"'
    - regexp: "^PACKAGE_VERSION="
      line: "PACKAGE_VERSION=\"{{ pve_i915_sriov_dkms_pkg_ver }}\""
  become: true

- name: ensure the patches directory
  ansible.builtin.file:
    path: "{{ pve_i915_sriov_dkms_patch_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true
  when: pve_i915_sriov_dkms_patches is defined and pve_i915_sriov_dkms_patches

- name: copy the patch files
  ansible.builtin.copy:
    src: "{{ item.file }}"
    dest: "{{ pve_i915_sriov_dkms_patch_dir }}/{{ item.file }}"
    owner: root
    group: root
    mode: "0755"
  loop: "{{ pve_i915_sriov_dkms_patches }}"
  become: true
  when: pve_i915_sriov_dkms_patches is defined and pve_i915_sriov_dkms_patches

- name: "configure i915-sriov-dkms (patches: PATCH)"
  ansible.builtin.lineinfile:
    path: "{{ pve_i915_sriov_dkms_conf_file }}"
    regexp: "^PATCH[{{ index }}]="
    line: "PATCH[{{ index }}]=\"{{ item.file }}\""
  loop: "{{ pve_i915_sriov_dkms_patches }}"
  loop_control:
    index_var: index
  become: true
  when: pve_i915_sriov_dkms_patches is defined and pve_i915_sriov_dkms_patches

- name: "configure i915-sriov-dkms (patches: PATCH_MATCH)"
  ansible.builtin.lineinfile:
    path: "{{ pve_i915_sriov_dkms_conf_file }}"
    regexp: "^PATCH_MATCH[{{ index }}]="
    line: "PATCH_MATCH[{{ index }}]=\"{{ item.match }}\""
  loop: "{{ pve_i915_sriov_dkms_patches }}"
  loop_control:
    index_var: index
  become: true
  when: pve_i915_sriov_dkms_patches is defined and pve_i915_sriov_dkms_patches

- name: install the custom driver
  ansible.builtin.command:
    argv:
      - dkms
      - install
      - '{{ "--force" if pve_i915_sriov_dkms_force_dkms_install else omit }}'
      - -m
      - i915-sriov-dkms
      - -v
      - "{{ pve_i915_sriov_dkms_pkg_ver }}"
  register: __dkms_result
  changed_when: "'already installed' not in __dkms_result.stdout"
  become: true

# Configure the grub タスクで \g<blank> を半角スペースとして展開できるように、必要があれば無害な半角スペースを追加するタスク。
- name: Prepare configure the grub
  ansible.builtin.lineinfile:
    path: "{{ pve_i915_sriov_dkms_grub_config }}"
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="([^ ]*) ?(.*?)"'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 \2"'
    backrefs: true
  become: true

- name: Configure the grub
  ansible.builtin.lineinfile:
    path: "{{ pve_i915_sriov_dkms_grub_config }}"
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=(?P<is_blank>(?={{ blank_pat }}))?(?P<is_first>(?=" *{{ param_name + param_equal }}.*))?(?(is_first)|(?=.*(?P<blank> )))?" *(?(is_blank)|(?P<has_param>(?=.*{{ param_pat }}))?(?(has_param){{ update_pat }}|{{ new_pat }})) *" *'
    # \g<new_exist>: 新規パラメータ追加時に展開される既存パラメータ。
    # \g<upd_pre>: 既存パラメータ更新時に展開される、更新パラメータよりも前に書かれている既存パラメータ。
    # \g<upd_suf>: 既存パラメータ更新時に展開される、更新パラメータよりも後に書かれている既存パラメータ。
    # \g<blank>: 先頭パラメータ更新時には空文字列に、それ以外の場合の場合には半角スペースに展開される。※パラメータが指定されていない状態から一つ目のパラメータを追加するタイミングと、パラメータが一つしかない場合の挙動が若干不安定。
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\g<new_exist>\g<upd_pre>\g<blank>{{ item.name }}{{ "=" + item.value if item.value is defined }}\g<upd_suf>"'
    backrefs: true
  vars:
    blank_pat: '" *"'
    param_name: "{{ item.name | regex_escape() }}"
    param_equal: '{{ "=" if item.value is defined }}'
    # 対象パラメータ検出用パターン
    param_pat: ' *(?<![a-z0-9._-]){{ param_name }}{{ "=[^ ]*" if item.value is defined }}(?![a-z0-9._-])'
    # 既存パラメータ更新用パターン
    update_pat: "(?P<upd_pre>.*?){{ param_pat }} *?(?P<upd_suf> ?.*?)"
    # 新規パラメータ追加用パターン
    new_pat: "(?P<new_exist>.*)"
  loop: "{{ pve_i915_sriov_dkms_grub_params | list }}"
  register: _grub_config
  notify:
    - update-grub
    - update-initramfs
    - reboot
  become: true

- name: Configure sysfs
  ansible.builtin.template:
    src: i915-sriov-dkms.j2
    dest: "{{ pve_i915_sriov_dkms_sysfs_file }}"
    owner: root
    group: root
    mode: '0644'
  become: true
